import tkinter as tk
from tkinter import ttk
from qiskit import QuantumCircuit

def create_scattering_circuit(total_qb, obstacle_qb, phase_sft):
    q_c = QuantumCircuit(total_qb)

    for i in range(total_qb):
        q_c.h(i)

    q_c.p(phase_sft, obstacle_qb)

    def q_f_t(qc, n):
        try:
            for a in range(n):
                for b in range(a):
                    qc.cp(3.14 / (2 ** (a - b)), b, a)
                qc.h(a)
        except Exception as e:
            print(f"Error in QFT Function: {e}")

        return qc

    q_f_t(q_c, total_qb)
    q_c.measure_all()
    return q_c

def update_circuit():
    try:
        total_qb = int(qb_entry.get())
        obstacle_qb = int(br_entry.get())
        phase_sft = float(ph_entry.get())

        qc = create_scattering_circuit(total_qb, obstacle_qb, phase_sft)

        cr_tx = qc.draw(output='text')

        tx_dis.config(state=tk.NORMAL)
        tx_dis.delete("1.0", tk.END)
        tx_dis.insert(tk.END, cr_tx)
        tx_dis.config(state=tk.DISABLED)

    except Exception as e:
        tx_dis.config(state=tk.NORMAL)
        tx_dis.delete("1.0", tk.END)
        tx_dis.insert(tk.END, f"Error: {e}")
        tx_dis.config(state=tk.DISABLED)

root = tk.Tk()
root.title("Quantum Scattering Simulation GUI")
root.geometry("800x500")

ttk.Label(root, text="Number of Qubits:").pack()
qb_entry = ttk.Entry(root)
qb_entry.insert(0, "5")
qb_entry.pack()

ttk.Label(root, text="Barrier Position:").pack()
br_entry = ttk.Entry(root)
br_entry.insert(0, "3")
br_entry.pack()

ttk.Label(root, text="Barrier Phase:").pack()
ph_entry = ttk.Entry(root)
ph_entry.insert(0, "1.57")
ph_entry.pack()

ttk.Button(root, text="Update Circuit", command=update_circuit).pack()

fr = ttk.Frame(root)
fr.pack(expand=True, fill=tk.BOTH)

tx_dis = tk.Text(fr, font=("Courier", 10), wrap=tk.NONE)
tx_dis.config(state=tk.DISABLED)

s_y = ttk.Scrollbar(fr, orient=tk.VERTICAL, command=tx_dis.yview)
s_y.pack(side=tk.RIGHT, fill=tk.Y)

s_x = ttk.Scrollbar(root, orient=tk.HORIZONTAL, command=tx_dis.xview)
s_x.pack(fill=tk.X)

tx_dis.pack(expand=True, fill=tk.BOTH)
tx_dis.config(yscrollcommand=s_y.set, xscrollcommand=s_x.set)

update_circuit()

root.mainloop()
